// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id                String              @id @default(uuid())
  name              String
  userId            String
  billboard         Billboard[]         @relation("StoreToBillboard")
  billboardmini     Billboardmini[]     @relation("StoreToBillboardMini")
  billboarddelivery Billboarddelivery[] @relation("StoreToBillboardDelivery")
  billboardsale     Billboardsale[]     @relation("StoreToBillboardSale")
  categories        Category[]          @relation("StoreToCategory")
  sizes             Size[]              @relation("StoreToSize")
  colors            Color[]             @relation("StoreToColor")
  product           Product[]           @relation("StoreToProduct")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Billboard {
  id         String     @id @default(uuid())
  storeId    String
  store      Store      @relation("StoreToBillboard", fields: [storeId], references: [id])
  label      String
  imageUrl   String
  categories Category[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@index([storeId])
}

model Billboardmini {
  id        String   @id @default(uuid())
  storeId   String
  store     Store    @relation("StoreToBillboardMini", fields: [storeId], references: [id])
  label     String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Billboarddelivery {
  id        String   @id @default(uuid())
  storeId   String
  store     Store    @relation("StoreToBillboardDelivery", fields: [storeId], references: [id])
  label     String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Billboardsale {
  id        String   @id @default(uuid())
  storeId   String
  store     Store    @relation("StoreToBillboardSale", fields: [storeId], references: [id])
  label     String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Category {
  id          String    @id @default(uuid())
  storeId     String
  store       Store     @relation("StoreToCategory", fields: [storeId], references: [id])
  billboardId String
  billboard   Billboard @relation(fields: [billboardId], references: [id])
  product     Product[] @relation("CategoryProduct")
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id      String    @id @default(uuid())
  storeId String
  store   Store     @relation("StoreToSize", fields: [storeId], references: [id])
  name    String
  value   String
  product Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Color {
  id        String    @id @default(uuid())
  storeId   String
  store     Store     @relation("StoreToColor", fields: [storeId], references: [id])
  name      String
  value     String
  product   Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([storeId])
}

model Product {
  id                   String   @id @default(uuid())
  storeId              String
  store                Store    @relation("StoreToProduct", fields: [storeId], references: [id])
  categoryId           String
  category             Category @relation("CategoryProduct", fields: [categoryId], references: [id])
  name                 String
  heading              String
  description          String
  // Thông tin sản phẩm bảo hanh vat ...
  headingrecommend     String
  infomationrecommend  String
  warrantyrecommend    String
  vatrecommend         String
  // Khuyến mãi
  promotionheading     String
  promotiondescription String
  //Bảo hành
  guaranteeheading     String
  guaranteedescription String
  guaranteeinfomation  String
  guaranteeprice       String
  //Giá sản phẩm main
  price                Decimal
  priceold             Decimal
  percentpromotion     Decimal
  isFeatured           Boolean  @default(false)
  isArchived           Boolean  @default(false)
  sizeId               String
  size                 Size     @relation(fields: [sizeId], references: [id])
  colorId              String
  color                Color    @relation(fields: [colorId], references: [id])
  images               Image[]
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@index([storeId])
  @@index([categoryId])
  @@index([sizeId])
  @@index([colorId])
}

model Image {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}
